input {
  kafka {
    codec => json
    bootstrap_servers => "kafka.tools-bangbaew:9092"
    topics => ["test-topic"]
  }
}
output {
  stdout {  
        codec => json_lines  
    } 
  elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "test-topic"
  }
}

input {
    jdbc {
        jdbc_connection_string => "jdbc:postgresql://otto.db.elephantsql.com/yhmzfoji"
        jdbc_user => "yhmzfoji"
        jdbc_password => "GO21dhA8mOlk1sY2CVF9Q-7hHzE4-QWD"
        jdbc_driver_library => "/logstash_dir/postgresql-42.6.0.jar"
        jdbc_driver_class => "org.postgresql.Driver"
        schedule => "0 * * * *" # cronjob schedule format (see "Helpful Links")
        statement => "SELECT id, created_at, name, playlist_id FROM chant.chant" # the PG command for retrieving the documents IMPORTANT: no semicolon!
        #jdbc_paging_enabled => "true"
        #jdbc_page_size => "300"
    }
}
output {
    # used to output the values in the terminal (DEBUGGING)
    # once everything is working, comment out this line
    stdout { codec => "json" }
    # used to output the values into elasticsearch
    elasticsearch {
        hosts => ["elasticsearch:9200"]
        index => "chant"
        #document_id => "document_%{pg_table_column_id}"
        #doc_as_upsert => true # upserts documents (e.g. if the document does not exist, creates a new record)
    }
}

input {
    jdbc {
        jdbc_connection_string => "jdbc:postgresql://otto.db.elephantsql.com/yhmzfoji"
        jdbc_user => "yhmzfoji"
        jdbc_password => "GO21dhA8mOlk1sY2CVF9Q-7hHzE4-QWD"
        jdbc_driver_library => "/logstash_dir/postgresql-42.6.0.jar"
        jdbc_driver_class => "org.postgresql.Driver"
        schedule => "0 * * * *" # cronjob schedule format (see "Helpful Links")
        statement => "SELECT id, created_at, name FROM chant.playlist" # the PG command for retrieving the documents IMPORTANT: no semicolon!
    }
}
output {
    stdout { codec => "json" }
    elasticsearch {
        hosts => ["elasticsearch:9200"]
        index => "playlist"
    }
}